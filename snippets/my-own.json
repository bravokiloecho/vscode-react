{
	"React map": {
    "prefix": "rmap",
		"body": [
			"{${1:arr}.map((${2:el}, index) => {",
			"\treturn <${3:El} key={`${1:arr}-${index}`}>${4:content}</${3:El}>",
			"})}"
		],
		"description": "React create loop"
	},
	"Insert HTML": {
    "prefix": "danger",
		"body": "dangerouslySetInnerHTML={{ __html: ${1:html} }}"
	},
	"React useState": {
    "prefix": "rus",
		"body": [
			"const [${1:name}, set${1/(.*)$/${1:/capitalize}/}] = React.useState(${3:state})"
		],
		"description": "React useState"
	},
	"React use effect": {
    "prefix": "rue",
		"body": [
			"React.useEffect(() => {",
			"\t$2",
			"}, [${1:watch}])"
		],
		"description": "React use effect"
	},
	"React use ref": {
    "prefix": "rur",
		"body": [
			"const ${1:name} = React.useRef(${2:null})"
		],
		"description": "React use effect"
	},
	
	"React use context": {
    "prefix": "ruco",
		"body": [
			"const ${1:context} = React.useContext(${2:Context})"
		],
		"description": "React import component"
	},
	"React useMemo": {
		"prefix": "rum",
		"body": [
			"const ${1:memo} = React.useMemo(() => {",
			"\treturn ${2: // do something}",
			"}, [${3:watch}])"
		],
		"description": "React useMemo"
	},
	"React useCallback": {
		"prefix": "ruca",
		"body": [
			"const ${1:functionName} = React.useCallback(() => {",
			"\t${2:doSomething()}",
			"}, [${3:watch}])"
		],
		"description": "React useMemo"
	},
	"React import component": {
    "prefix": "rimp",
		"body": [
			"import ${1:Component} from '@/$2${1:Component}'"
		],
		"description": "React import component"
	},
	"Prop Type defaults": {
    "prefix": "ptdf",
		"body": [
			"${1:${TM_FILENAME_BASE}}.defaultProps = {",
			"\t${2:prop}: ${3:default},",
			"}",
			""
		],
		"description": "Default props"
	},
	"Class name Array": {
		"prefix": "cna",
		"body": "className={[$1].join(' ')}",
		"description": "Create an empty array of classname"
	}
}